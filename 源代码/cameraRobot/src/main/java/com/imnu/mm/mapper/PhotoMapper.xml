<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imnu.mm.mapper.PhotoMapper" >
  <resultMap id="BaseResultMap" type="com.imnu.mm.pojo.Photo" >
    <id column="photoID" property="photoid" jdbcType="INTEGER" />
    <result column="photoName" property="photoname" jdbcType="VARCHAR" />
    <result column="datetime" property="datetime" jdbcType="TIMESTAMP" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="userID" property="userid" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="userEmail" property="useremail" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.imnu.mm.pojo.Photo" extends="BaseResultMap" >
    <result column="path" property="path" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    photoID, photoName, datetime, title, type, introduce, userID, userName, userEmail
  </sql>
  <sql id="Blob_Column_List" >
    path
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.imnu.mm.pojo.PhotoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from photo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.imnu.mm.pojo.PhotoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from photo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from photo
    where photoID = #{photoid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from photo
    where photoID = #{photoid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.imnu.mm.pojo.PhotoExample" >
    delete from photo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imnu.mm.pojo.Photo" >
    insert into photo (photoID, photoName, datetime, 
      title, type, introduce, 
      userID, userName, userEmail, 
      path)
    values (#{photoid,jdbcType=INTEGER}, #{photoname,jdbcType=VARCHAR}, #{datetime,jdbcType=TIMESTAMP}, 
      #{title,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{introduce,jdbcType=VARCHAR}, 
      #{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{useremail,jdbcType=VARCHAR}, 
      #{path,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.imnu.mm.pojo.Photo" >
    insert into photo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="photoid != null" >
        photoID,
      </if>
      <if test="photoname != null" >
        photoName,
      </if>
      <if test="datetime != null" >
        datetime,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="userid != null" >
        userID,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="useremail != null" >
        userEmail,
      </if>
      <if test="path != null" >
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="photoid != null" >
        #{photoid,jdbcType=INTEGER},
      </if>
      <if test="photoname != null" >
        #{photoname,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null" >
        #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imnu.mm.pojo.PhotoExample" resultType="java.lang.Integer" >
    select count(*) from photo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update photo
    <set >
      <if test="record.photoid != null" >
        photoID = #{record.photoid,jdbcType=INTEGER},
      </if>
      <if test="record.photoname != null" >
        photoName = #{record.photoname,jdbcType=VARCHAR},
      </if>
      <if test="record.datetime != null" >
        datetime = #{record.datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.introduce != null" >
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.useremail != null" >
        userEmail = #{record.useremail,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update photo
    set photoID = #{record.photoid,jdbcType=INTEGER},
      photoName = #{record.photoname,jdbcType=VARCHAR},
      datetime = #{record.datetime,jdbcType=TIMESTAMP},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      userID = #{record.userid,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      userEmail = #{record.useremail,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update photo
    set photoID = #{record.photoid,jdbcType=INTEGER},
      photoName = #{record.photoname,jdbcType=VARCHAR},
      datetime = #{record.datetime,jdbcType=TIMESTAMP},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      userID = #{record.userid,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      userEmail = #{record.useremail,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imnu.mm.pojo.Photo" >
    update photo
    <set >
      <if test="photoname != null" >
        photoName = #{photoname,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null" >
        userEmail = #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where photoID = #{photoid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.imnu.mm.pojo.Photo" >
    update photo
    set photoName = #{photoname,jdbcType=VARCHAR},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      introduce = #{introduce,jdbcType=VARCHAR},
      userID = #{userid,jdbcType=INTEGER},
      userName = #{username,jdbcType=VARCHAR},
      userEmail = #{useremail,jdbcType=VARCHAR},
      path = #{path,jdbcType=LONGVARCHAR}
    where photoID = #{photoid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imnu.mm.pojo.Photo" >
    update photo
    set photoName = #{photoname,jdbcType=VARCHAR},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      introduce = #{introduce,jdbcType=VARCHAR},
      userID = #{userid,jdbcType=INTEGER},
      userName = #{username,jdbcType=VARCHAR},
      userEmail = #{useremail,jdbcType=VARCHAR}
    where photoID = #{photoid,jdbcType=INTEGER}
  </update>
</mapper>